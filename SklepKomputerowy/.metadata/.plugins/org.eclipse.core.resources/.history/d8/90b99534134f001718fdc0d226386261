package bazaDanych;

import java.util.List;
import java.util.Random;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.hibernate.criterion.Projections;

import Logika.Produkt;

public class ProduktStore {

	// public static Configuration cfg = new Configuration();
	// public static SessionFactory factory = null;

	public static void main(String[] args) {

		Configuration cfg = new Configuration();
		cfg.configure("hibernate.cfg.xml");
		SessionFactory factory = cfg.buildSessionFactory();

		// SessionFactory factory = cfg.buildSessionFactory();

		Session session = factory.openSession();

		Transaction t = session.beginTransaction();

		// Query<String> query = session.createQuery("SELECT count(1) from
		// Produkt P ");
		// query.executeUpdate();

		// List<String> list = query.list();

		System.out.println(
				(Number) session.createCriteria("Logika.Produkt").setProjection(Projections.rowCount()).uniqueResult());

		t.commit();

		session.close();

	}

	public void dodajProduktDoBazy(String nazwa, int cena) {

		Session session = Interfejs.Main.factory.openSession();

		Transaction t = session.beginTransaction();

		Produkt e1 = new Produkt();
		e1.setCena(cena);
		e1.setNazwa(nazwa);
		session.persist(e1);
		t.commit();

		session.close();

		System.out.println("successfully saved" + e1.getCena() + " " + e1.getIDProduktu());

	}

	public boolean usunProduktZBazy(int idProduktu) {

		Session session = Interfejs.Main.factory.openSession();

		Transaction t = session.beginTransaction();

		Query<String> query1 = session.createQuery("SELECT P.IDProduktu FROM Produkt P where :sprawdzaneID = P.IDProduktu ");
		
		query1.setParameter("sprawdzaneID", idProduktu);
		
		
		List<String> list = query1.list();
		if(list.isEmpty()) return false;

	
		Query<String> query2 = session.createQuery("DELETE Produkt P where :sprawdzaneID = P.IDProduktu ");
		query2.setParameter("sprawdzaneID", idProduktu);
		query2.executeUpdate();

		t.commit();
		session.close();
		
		return true;
		
	}

	public Number pobierzIloscWierszy() {

		Session session = Interfejs.Main.factory.openSession();

		Transaction t = session.beginTransaction();

		return (Number) session.createCriteria("Logika.Produkt").setProjection(Projections.rowCount()).uniqueResult();

	}
	public int pobierzLiczbeZZapytania(){
		Session session = Interfejs.Main.factory.openSession();

		Transaction t = session.beginTransaction();
		
		int count = ((Long)session.getSession().createQuery("select count(*) from Book").uniqueResult()).intValue();
		
		return count;
	}
	
	public Produkt pobierzProduktZBazy(){
		
		
		
		Session session = Interfejs.Main.factory.openSession();

		Transaction t = session.beginTransaction();
		

		
		int licznik = 1; 
		
		
		
		Query<String> query = session.createQuery("SELECT P.IDProduktu FROM Produkt P WHERE :licznik = P.IDProduktu");
		List<String> list = query.list();
		System.out.println(list.toString());

		while( list.isEmpty()){
			licznik++;
			query = session.createQuery("SELECT P.IDProduktu FROM Produkt P WHERE :licznik = P.IDProduktu");
			query.setParameter("licznik", licznik);
			list = query.list();
		}
		
		Produkt nowy = new Produkt();
		int id = ((Long)session.getSession().createQuery("SELECT P.IDProduktu FROM Produkt P WHERE " + licznik + " = P.IDProduktu").uniqueResult()).intValue();
		String nazwa = ((Long)session.getSession().createQuery("SELECT P.Nazwa FROM Produkt P WHERE " + licznik + " = P.IDProduktu").uniqueResult()).toString();
		int cena = ((Long)session.getSession().createQuery("SELECT P.Cena FROM Produkt P WHERE " + licznik + " = P.IDProduktu").uniqueResult()).intValue();
				
		nowy.setIDProduktu(id);
		nowy.setNazwa(nazwa);
		nowy.setCena(cena);
		
		return nowy;
		
		
	}
}
